@model POSSystem.ViewModel.MonitoringViewModel

@{
    ViewBag.Title = "User Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewBag.Status != null)
{
    if (ViewBag.Status == "0")
    {
        <div class="callout callout-danger">
            <h4>Warning!</h4>
            <p>
                @Html.Raw(ViewBag.Message)
            </p>
        </div>
    }
    else
    {
        <div class="callout callout-success">
            <h4>Success!</h4>
            <p>
                @Html.Raw(ViewBag.Message)
            </p>
        </div>
    }
}
@if (ViewBag.GetStatus != null)
{
    if (ViewBag.GetStatus == "0")
    {
        <div class="callout callout-danger">
            <h4>Warning!</h4>
            <p>
                @Html.Raw(ViewBag.Message)
            </p>
        </div>
    }
    else
    {
        <div class="callout callout-success">
            <h4>Success!</h4>
            <p>
                @Html.Raw(ViewBag.Message)
            </p>
        </div>
    }
}
@using (Html.BeginForm("UserProfile", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.ActionButton)
    @Html.HiddenFor(x => x.employeeDetails.Id)
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">User Profile</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="glyphicon glyphicon-minus"></i></button>
            </div>
        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-md-6 form-horizontal">
                    <div class="form-group">
                        <label class="control-label input-sm col-sm-4">User Name</label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.employeeDetails.UserName, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 form-horizontal">
                    <div class="form-group">
                        <label class="control-label input-sm col-sm-4">First Name</label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.employeeDetails.FirstNm, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(x => x.employeeDetails.FirstNm, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <!-- /.form-group -->
                    <div class="form-group">
                        <label class="control-label input-sm col-sm-4">Middle Name</label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.employeeDetails.MiddleNm, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(x => x.employeeDetails.MiddleNm, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <!-- /.form-group -->
                    <div class="form-group">
                        <label class="control-label input-sm col-sm-4">Last Name</label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.employeeDetails.LastNm, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(x => x.employeeDetails.LastNm, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <!-- /.form-group -->
                    <div class="form-group">
                        <label class="control-label input-sm col-sm-4">Contact Number</label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.employeeDetails.PhoneNumber, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(x => x.employeeDetails.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <!-- /.form-group -->
                </div>
                <!-- /.col -->
                <div class="col-md-6 form-horizontal">
                    <div class="form-group">
                        <label class="control-label input-sm col-sm-4">Email Address</label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(x => x.employeeDetails.Email, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(x => x.employeeDetails.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label input-sm col-sm-4">User Role</label>
                        <div class="col-sm-8">
                            @*@Html.DropDownList("load_employeeDetails_Role", Model.RoleList, new { @class = "form-control" })*@
                            @Html.DropDownListFor(x => x.employeeDetails.Role, Model.RoleList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.employeeDetails.Role, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <!-- /.form-group -->
                    <div class="form-group">
                        <label class="control-label input-sm col-sm-4">Status</label>
                        <div class="col-sm-8">
                            @*@Html.DropDownList("load_employeeDetails_IsActive", Model.StatusList, new { @class = "form-control" })*@
                            @Html.DropDownListFor(x => x.employeeDetails.IsActive, Model.StatusList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.employeeDetails.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <!-- /.form-group -->
                </div>
                <!-- /.col -->
            </div>
        </div>
        <!-- /.box-body -->
    </div>
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Terms and Conditions</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="glyphicon glyphicon-minus"></i></button>
            </div>
        </div>
        <div class="box-body">
            @Html.Partial("~/Views/Shared/_termsAndAgreement001.cshtml")
            <div style="margin-top: 20px;" id="divTermsAndConditions">
                <input type="checkbox" id="chkTermsAndConditions" />&nbsp;&nbsp;<b>I agree with the terms and conditions above.</b>
            </div>
        </div>
        <!-- /.box-body -->
    </div>
    <div style="display:none;">
        <button type="submit" id="btnSubmitForm"></button>
    </div>

    <div class="row">
        <div class="form-group row col-sm-12 pull-right">
            <button ID="btnExit" type="button" class="btn btn-primary button-margin btn-sm pull-right" style="margin-right: 10px; width: 120px;">Exit</button>
            <button ID="btnUpdate" type="button" class="btn btn-primary button-margin btn-sm pull-right" style="margin-right: 10px; width: 120px;">Update</button>
        </div>
    </div>
}
<!--Form Default-->
<div class="modal fade" id="modal-confirmation">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Message from WebPage</h4>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left modalClose" data-dismiss="modal">Close</button>
                <button id="modalYes" type="button" class="btn btn-primary" data-dismiss="modal">Proceed</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="modal-alert">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Message from WebPage</h4>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left modalClose" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<style type="text/css">
    .loadinggif {
        background: url('@Url.Content("~/Content/img/ui-anim-loading.gif")') no-repeat right;
    }

    .modalload {
        position: fixed;
        top: 0;
        left: 0;
        background-color: black;
        z-index: 99;
        opacity: 0.8;
        filter: alphaopacity=80;
        -moz-opacity: 0.8;
        min-height: 100%;
        width: 100%;
    }

    .loading {
        font-family: Arial;
        font-size: 10pt;
        border: 5px solid #67CFF5;
        width: 200px;
        height: 100px;
        display: none;
        position: fixed;
        background-color: White;
        z-index: 999999;
    }

    .align-amount{
        text-align:right;
    }
</style>

<div class="loading" align="center">
    Loading. Please wait.<br />
    <br />
    <img src='@Url.Content("~/Content/img/loading.gif")' />
</div>

<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css">
<script src="http://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script type="text/javascript">
    function ShowProgress() {
        setTimeout(function () {
            var modal = $('<div />');
            modal.addClass("modalload");
            $('body').append(modal);
            var loading = $(".loading");
            loading.show();

            var top = Math.max($(window).height() / 2 - loading[0].offsetHeight / 2, 0);
            var left = Math.max($(window).width() / 2 - loading[0].offsetWidth / 2, 0);
            loading.css({ top: top, left: left });
        }, 200);
    }

    function SystemMessage(message) {
        $("#modal-alert > .modal-dialog > .modal-content > .modal-body").html("<p>" + message + "</p>");
        $('#modal-alert').modal('show');
    }
    function confirmation(title, message, runFunction) {
        $("#modal-confirmation > .modal-dialog > .modal-content > .modal-header > .modal-title").html(title);
        $("#modal-confirmation > .modal-dialog > .modal-content > .modal-body").html("<p>" + message + "</p>");
        $("#modal-confirmation").modal();
        $("#modalYes").click(function () {
            ShowProgress();
            eval(runFunction);
            return true;
        });
        $('#modal-confirmation').on('hidden.bs.modal', function (e) {
            e.preventDefault();
            return false;
        })
    }

</script>
<!--Form Default-->
<script type="text/javascript">

    $(document).ready(function () { 
        
        if ('@ViewBag.Status' ==  "1") {
                window.location.href = '@Url.Action("UserManagement", "Account", new { area = "" })';
        }
        $('#load_employeeDetails_Role').val($('#employeeDetails_Role').val())
        $('#load_employeeDetails_IsActive').val($('#employeeDetails_IsActive').val())
    });
    $('#btnExit').click(function () {
            $('#ActionButton').val('');
            confirmation("Confirm Request", "Do you want to proceed?", "window.location.href = '@Url.Action("UserManagement","Account",new { area = "" })';");
            return false;
    });
    $('#btnUpdate').click(function () {
        if (document.getElementById('chkTermsAndConditions').checked == true) {
            $('#ActionButton').val('Update');
            confirmation("Confirm Request", "Do you want to proceed?", "$('#btnSubmitForm').click()");
        }
        else {
            SystemMessage("You must agree with terms and agreement.");
        }
    });

</script>

<style>
    #divcontainer {
        max-width: 100%;
        width: 100%;
    }
</style>
